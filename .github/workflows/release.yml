name: deploy to environments

on:
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.event.ref.BRANCH_NAME }}

jobs:
  quality_checks:
    uses: NHSDigital/eps-workflow-quality-checks/.github/workflows/quality-checks.yml@v4.1.3
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  get_commit_id:
    runs-on: ubuntu-22.04
    outputs:
      commit_id: ${{ steps.commit_id.outputs.commit_id }}
    steps:
      - name: Get Commit ID
        id: commit_id
        run: |
          echo "commit_id=${{ github.sha }}" >> "$GITHUB_OUTPUT"

  get_asdf_version:
    runs-on: ubuntu-22.04
    outputs:
      asdf_version: ${{ steps.asdf-version.outputs.version }}
      tag_format: ${{ steps.load-config.outputs.TAG_FORMAT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get asdf version
        id: asdf-version
        run: echo "version=$(awk '!/^#/ && NF {print $1; exit}' .tool-versions.asdf)" >> "$GITHUB_OUTPUT"

      - name: Load config value
        id: load-config
        run: |
          TAG_FORMAT=$(yq '.TAG_FORMAT' .github/config/settings.yml)
          echo "TAG_FORMAT=$TAG_FORMAT" >> "$GITHUB_OUTPUT"

  tag_release:
    needs: [quality_checks, get_commit_id, get_asdf_version]
    uses: NHSDigital/eps-workflow-semantic-release/.github/workflows/tag-release.yml@f80157cecce288dd175e61b477a1d2dbe9c88b99
    with:
      dry_run: false
      asdfVersion: ${{ needs.get_asdf_version.outputs.asdf_version }}
      branch_name: main
      publish_package: false
      tag_format: ${{ needs.get_asdf_version.outputs.tag_format }}
    secrets: inherit

  package_code:
    needs: [get_commit_id, tag_release]
    uses: ./.github/workflows/cdk_package_code.yml
    with:
      STACK_NAME: epsam
      VERSION_NUMBER: ${{ needs.tag_release.outputs.version_tag }}
      COMMIT_ID: ${{ needs.get_commit_id.outputs.commit_id }}

  release_dev:
    needs: [get_commit_id, tag_release, package_code]
    uses: ./.github/workflows/cdk_release_code.yml
    with:
      STACK_NAME: epsam
      TARGET_ENVIRONMENT: dev
      VERSION_NUMBER: ${{ needs.tag_release.outputs.version_tag }}
      COMMIT_ID: ${{ needs.get_commit_id.outputs.commit_id }}
      CDK_APP_NAME: EpsAssistMeApp
      DEPLOY_CODE: true
      LOG_RETENTION_IN_DAYS: 30
      LOG_LEVEL: DEBUG
    secrets:
      CLOUD_FORMATION_DEPLOY_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      CDK_PULL_IMAGE_ROLE: ${{ secrets.DEV_CDK_PULL_IMAGE_ROLE }}
      REGRESSION_TESTS_PEM: ${{ secrets.REGRESSION_TESTS_PEM }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}

  create_release_notes:
    needs: [tag_release, package_code, get_commit_id, release_dev]
    uses: ./.github/workflows/create_release_notes.yml
    with:
      VERSION_NUMBER: ${{needs.tag_release.outputs.version_tag}}
      CREATE_INT_RELEASE_NOTES: true
      CREATE_INT_RC_RELEASE_NOTES: false
      CREATE_PROD_RELEASE_NOTES: true
      MARK_JIRA_RELEASED: false
    secrets:
      DEV_CLOUD_FORMATION_EXECUTE_LAMBDA_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_EXECUTE_LAMBDA_ROLE }}
      DEV_CLOUD_FORMATION_CHECK_VERSION_ROLE: ${{ secrets.DEV_CLOUD_FORMATION_CHECK_VERSION_ROLE }}
      INT_CLOUD_FORMATION_CHECK_VERSION_ROLE: ${{ secrets.INT_CLOUD_FORMATION_CHECK_VERSION_ROLE }}
      PROD_CLOUD_FORMATION_CHECK_VERSION_ROLE: ${{ secrets.PROD_CLOUD_FORMATION_CHECK_VERSION_ROLE }}
